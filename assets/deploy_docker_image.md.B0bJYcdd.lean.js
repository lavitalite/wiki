import{_ as a,c as i,a4 as n,o as e}from"./chunks/framework.su6J3y5l.js";const p="/tech_insight/assets/docker-stages.C2AVMQmk.png",l="/tech_insight/assets/docker_env_vs_args.DBUNp9OX.webp",t="/tech_insight/assets/ip_break_down.H9oaw5tD.jpg",g=JSON.parse('{"title":"镜像的创建管理和发布","description":"","frontmatter":{},"headers":[],"relativePath":"deploy/docker/image.md","filePath":"deploy/docker/image.md","lastUpdated":1732976097000}'),r={name:"deploy/docker/image.md"};function c(o,s,d,h,k,m){return e(),i("div",null,s[0]||(s[0]=[n('<h1 id="镜像的创建管理和发布" tabindex="-1">镜像的创建管理和发布 <a class="header-anchor" href="#镜像的创建管理和发布" aria-label="Permalink to &quot;镜像的创建管理和发布&quot;">​</a></h1><p>[toc]</p><h2 id="镜像的获取" tabindex="-1">镜像的获取 <a class="header-anchor" href="#镜像的获取" aria-label="Permalink to &quot;镜像的获取&quot;">​</a></h2><ul><li>pull from registry</li><li>load from file</li><li>build from dockerflie</li></ul><p><img src="'+p+`" alt=""></p><h2 id="镜像操作" tabindex="-1">镜像操作 <a class="header-anchor" href="#镜像操作" aria-label="Permalink to &quot;镜像操作&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">etc stands for</p><p>almost all system-wide configuration files are under /etc You can find references to &quot;et cetera&quot; in old Bell Labs UNIX manuals and so on – nowadays it&#39;s used only for system configuration, but it used to be where all the stuff that didn&#39;t fit into other directories went.</p></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="build-image-from-dockerfile" tabindex="-1">build image from dockerfile <a class="header-anchor" href="#build-image-from-dockerfile" aria-label="Permalink to &quot;build image from dockerfile&quot;">​</a></h2><div class="language-dockerfile vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ubuntu:20.04</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apt-get update</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apt-get install -y wget</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wget https://github.com/ipinfo/cli/releases/download/ipinfo-2.0.1/ipinfo_2.0.1_linux_amd64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tar zxf ipinfo_2.0.1_linux_amd64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mv ipinfo_2.0.1_linux_amd64 /usr/bin/ipinfo</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rm -rf ipinfo_2.0.1_linux_amd64.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>改进版Dockerfile</p><div class="language-dockerfile vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ubuntu:20.04</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apt-get update &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    apt-get install -y wget &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wget https://github.com/ipinfo/cli/releases/download/ipinfo-2.0.1/ipinfo_2.0.1_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tar zxf ipinfo_2.0.1_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mv ipinfo_2.0.1_linux_amd64 /usr/bin/ipinfo &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rm -rf ipinfo_2.0.1_linux_amd64.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="构建参数和环境变量" tabindex="-1">构建参数和环境变量 <a class="header-anchor" href="#构建参数和环境变量" aria-label="Permalink to &quot;构建参数和环境变量&quot;">​</a></h3><p><img src="`+l+`" alt=""></p><div class="language-dockerfile vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ubuntu:20.04</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VERSION=2.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apt-get update &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    apt-get install -y wget &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wget https://github.com/ipinfo/cli/releases/download/ipinfo-\${VERSION}/ipinfo_\${VERSION}_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tar zxf ipinfo_\${VERSION}_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mv ipinfo_\${VERSION}_linux_amd64 /usr/bin/ipinfo &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rm -rf ipinfo_\${VERSION}_linux_amd64.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="容器启动命令" tabindex="-1">容器启动命令 <a class="header-anchor" href="#容器启动命令" aria-label="Permalink to &quot;容器启动命令&quot;">​</a></h3><p>ENTRYPOINT</p><p>CMD</p><p>shell格式</p><p>exec格式</p><div class="info custom-block"><p class="custom-block-title">shell -c flag</p><p>The -c argument is:</p><p>Read commands from the command_string operand instead of from the standard input. the positional parameters ($1, $2, etc.)</p></div><div class="info custom-block"><p class="custom-block-title">0.0.0.0 环回地址 私有地址</p><p>​启动本地开发服务器(Client和Server可以不在一台机器上)配置监听host <code>localhost</code>: 限制只能从本机访问, <code>0.0.0.0</code>: 不限定只能从本机访问，还可以从局域网的其他设备通过局域网ip访问</p><p>本机的三块网卡 loopback（虚拟网卡） en0 ethernet（有线网卡） wlan（你的无线网卡）</p><p>bind server to host <code>0.0.0.0</code> NAT会将我们的私有地址转成路由器中的公网IP与外部Internet连接</p><p>监听本机所有网卡的 IP 地址 iptables</p><div class="tip custom-block"><p class="custom-block-title">reference</p><p>现在有两台pc在同一个局域网内，分别为pc1与pc2，pc1上有一个网卡，IP地址为192.168.10.128，那么：</p><p>（1）pc1中sever监听127.0.0.1，则pc1中的client可以连上127.0.0.1，192.168.10.128连不上；而pc2中client都连不上。</p><p>（2）pc1中sever监听192.168.10.128，则pc1中的client可以连上192.168.10.128，127.0.0.1连不上；而pc2中client能连上192.168.10.128。</p><p>（3）pc1中sever监听0.0.0.0，则pc1中的client可以连上127.0.0.1和192.168.10.128，pc2中的client能连上192.168.10.128。</p></div></div><p>查询本机出口公网ip<code>curl ifconfig.me</code> <code>tracert www.google.com</code> 查询本机内网ip<code>ipconfig | grep en0</code> <code>ipconfig | grep wlan</code></p><p><img src="`+t+'" alt=""> :::</p>',24)]))}const b=a(r,[["render",c]]);export{g as __pageData,b as default};
