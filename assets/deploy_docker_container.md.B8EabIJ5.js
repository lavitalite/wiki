import{_ as s,c as i,a4 as n,o as e}from"./chunks/framework.su6J3y5l.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"deploy/docker/container.md","filePath":"deploy/docker/container.md","lastUpdated":1732976097000}'),t={name:"deploy/docker/container.md"};function l(r,a,p,h,o,d){return e(),i("div",null,a[0]||(a[0]=[n(`<h2 id="running-container" tabindex="-1">Running Container <a class="header-anchor" href="#running-container" aria-label="Permalink to &quot;Running Container&quot;">​</a></h2><p>isolate fs, networking and process tree</p><h3 id="command-form" tabindex="-1">command form <a class="header-anchor" href="#command-form" aria-label="Permalink to &quot;command form&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [OPTIONS] IMAGE[:TAG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@DIGEST] [COMMAND] [ARG...]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="image-refs" tabindex="-1">Image refs <a class="header-anchor" href="#image-refs" aria-label="Permalink to &quot;Image refs&quot;">​</a></h3><p>the image refs is the name and version of the image</p><p><code>docker run image[:TAG][@DIGEST</code></p><p>an image tag is the image the version, which defaults to <code>latest</code> when omitted content addressable identifier called a digest</p><h2 id="options-配置项" tabindex="-1">OPTIONS 配置项 <a class="header-anchor" href="#options-配置项" aria-label="Permalink to &quot;OPTIONS 配置项&quot;">​</a></h2><h3 id="start-up-cmd-and-args" tabindex="-1">start up cmd and args <a class="header-anchor" href="#start-up-cmd-and-args" aria-label="Permalink to &quot;start up cmd and args&quot;">​</a></h3><p>specify the command to run on container start up</p><h3 id="容器的持久化存储和数据共享" tabindex="-1">容器的持久化存储和数据共享 <a class="header-anchor" href="#容器的持久化存储和数据共享" aria-label="Permalink to &quot;容器的持久化存储和数据共享&quot;">​</a></h3><h4 id="data-volume" tabindex="-1">data volume <a class="header-anchor" href="#data-volume" aria-label="Permalink to &quot;data volume&quot;">​</a></h4><p><code>docker run -v db:/var/lib/mysql</code><code>VOLUME /var/lib/mysql</code></p><h4 id="bind-mounting" tabindex="-1">bind mounting <a class="header-anchor" href="#bind-mounting" aria-label="Permalink to &quot;bind mounting&quot;">​</a></h4><p><code>docker run -v $(pwd):/usr/share/nginx/html -p 80:80</code></p><p>temp/presistent data storage fs mount</p><p>nas/aws/native data volume</p><div class="info custom-block"><p class="custom-block-title">文件拷贝和同步</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vagrant</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">local_pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [vm_name]:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><div class="language-dockerfile vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> python:2.7</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LABEL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maintainer=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Xi Yuan&lt;hack.xiyuan@gmail.com&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> . /boilerplate</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /boilerplate</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pip install -r requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EXPOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 5000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENTRYPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts/setup.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="setup.sh">setup.sh</span></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> APP_SETTINGS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;skeleton.server.config.ProductionConfig&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create_db</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create_admin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create_data</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runserver</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0.0.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h3 id="容器运行的资源限制" tabindex="-1">容器运行的资源限制 <a class="header-anchor" href="#容器运行的资源限制" aria-label="Permalink to &quot;容器运行的资源限制&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cpu-shares(相对权重）</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --memory-bytes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Memory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> limit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="容器运行的连通性-connectivity" tabindex="-1">容器运行的连通性(connectivity) <a class="header-anchor" href="#容器运行的连通性-connectivity" aria-label="Permalink to &quot;容器运行的连通性(connectivity)&quot;">​</a></h3><p>internal connectivity external connectivity</p><p>configure nat for external access test network connectivity</p><h4 id="docker-built-in-net-driver" tabindex="-1">docker built-in net driver <a class="header-anchor" href="#docker-built-in-net-driver" aria-label="Permalink to &quot;docker built-in net driver&quot;">​</a></h4><p>macvlan multi-host bridge multiple hosts or clouds.</p><p><code>iptables</code>: rich L3/L4 firewall that provides rule chains for packet marking and dropping.</p><p>multi-tenant microservices deployments</p><p>--subnet --gateway</p><p>端口映射</p><p><code>-p IP:host_port:container_port</code> when an IP address is not specified, or <code>0.0.0.0:host_port</code> port mapping will be expose on all interfaces of a host(主机的所有网卡)</p><h2 id="docker命令行的基本使用" tabindex="-1">docker命令行的基本使用 <a class="header-anchor" href="#docker命令行的基本使用" aria-label="Permalink to &quot;docker命令行的基本使用&quot;">​</a></h2><p>docker + 管理的对象（比如容器，镜像） + 具体操作（比如创建，启动，停止，删除）</p><ul><li><p><code>docker image pull nginx</code> 拉取一个叫nginx的docker image镜像</p></li><li><p><code>docker container stop web</code> 停止一个叫web的docker container容器</p></li></ul><h2 id="container-action" tabindex="-1">container action <a class="header-anchor" href="#container-action" aria-label="Permalink to &quot;container action&quot;">​</a></h2><h2 id="contianer-mode" tabindex="-1">contianer mode <a class="header-anchor" href="#contianer-mode" aria-label="Permalink to &quot;contianer mode&quot;">​</a></h2><p>attach <code>docker container run -p 80:80 nginx</code> detach <code>docker container run -d -p 80:80 nginx</code></p><h2 id="docker-container-run背后发生了什么" tabindex="-1"><code>docker container run</code>背后发生了什么 <a class="header-anchor" href="#docker-container-run背后发生了什么" aria-label="Permalink to &quot;\`docker container run\`背后发生了什么&quot;">​</a></h2><ul><li><p>在本地查找是否有nginx这个image镜像，但是没有发现</p></li><li><p>去远程的image registry查找nginx镜像（默认的registry是Docker Hub)</p></li><li><p>下载最新版本的nginx镜像 （nginx:latest 默认)</p></li><li><p>基于nginx镜像来创建一个新的容器，并且准备运行</p></li></ul>`,41)]))}const u=s(t,[["render",l]]);export{k as __pageData,u as default};
